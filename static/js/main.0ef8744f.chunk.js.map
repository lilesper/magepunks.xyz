{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/core/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","config/index.ts","hooks/usePromptNetwork.ts","components/LoginButton.tsx","contracts/factories/Ownable__factory.ts","contracts/factories/Pausable__factory.ts","contracts/factories/ERC721__factory.ts","contracts/factories/ERC721Enumerable__factory.ts","contracts/factories/IERC721Enumerable__factory.ts","contracts/factories/IERC721Metadata__factory.ts","contracts/factories/IERC721__factory.ts","contracts/factories/IERC721Receiver__factory.ts","contracts/factories/ERC165__factory.ts","contracts/factories/IERC165__factory.ts","contracts/factories/MagePunks__factory.ts","contracts/factories/MagicalItem__factory.ts","pages/Tab3.tsx","pages/Tab1.tsx","pages/Tab2.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","config","chainId","networkName","explorerUrl","defaultProvider","chain","network","networkId","nativeCurrency","nftContractAddress","usePromptNetwork","useState","networkPrompt","setNetworkPrompt","ethereum","window","connectToNetwork","provider","a","request","method","params","toString","chainName","name","symbol","decimals","rpcUrls","blockExplorerUrls","useEffect","console","log","networkVersion","LoginButton","useWallet","connect","account","balance","color","String","parseFloat","slice","src","fill","onClick","_abi","anonymous","inputs","indexed","internalType","type","outputs","stateMutability","utils","Interface","address","signerOrProvider","Contract","abi","_bytecode","isSuperArgs","xs","length","ERC721__factory","args","name_","symbol_","overrides","signer","ContractFactory","bytecode","MagePunks__factory","MagicalItem__factory","unknownAttributes","contractAddress","Tab2","magePunkId","setMagePunkId","magePunkAttributes","setMagePunkAttributes","ethers","providers","Web3Provider","getSigner","useIonAlert","present","status","setStatus","supply","setSupply","maxSupply","mintPrice","setMintPrice","baseUri","nftContract","totalSupply","amount","toNumber","_mintPrice","cost","on","from","to","event","mintedId","fetch","res","json","slot","size","href","routerLink","sizeMd","sizeLg","sizeXs","title","x","i","trait_type","value","metadata","message","isOpen","formatEther","expand","mint","catch","header","data","buttons","text","icon","documentLockOutline","style","position","right","bottom","open","MagePunkCard","nft","nftMeta","description","image","replace","values","attributes","AsyncERC1155Card","undefined","setNftMeta","uri","AsyncNFTCard","tokenURI","CollectionInventory","contract_address","setMagePunkOwners","myPunks","setMyPunks","Array","forEach","ownerOf","includes","ERC1155CollectionInventory","inventory","setInventory","balanceOf","entries","Tab1","useParams","ownerAddress","setOwnerAddress","parseInt","BigNumber","setupIonicReact","App","exact","path","Tab3","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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Ac,UACdzB,KAAM,UACN0B,KAAM,WAER,CACED,aAAc,YACdzB,KAAM,MACN0B,KAAM,aAER,CACED,aAAc,YACdzB,KAAM,SACN0B,KAAM,cAGV1B,KAAM,YACN2B,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEE,aAAc,UACdzB,KAAM,KACN0B,KAAM,YAGV1B,KAAM,SACN2B,QAAS,CACP,CACEF,aAAc,OACdzB,KAAM,GACN0B,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEE,aAAc,UACdzB,KAAM,UACN0B,KAAM,WAER,CACED,aAAc,UACdzB,KAAM,WACN0B,KAAM,YAGV1B,KAAM,mBACN2B,QAAS,CACP,CACEF,aAAc,OACdzB,KAAM,GACN0B,KAAM,SAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEE,aAAc,UACdzB,KAAM,UACN0B,KAAM,WAER,CACED,aAAc,UACdzB,KAAM,KACN0B,KAAM,WAER,CACED,aAAc,UACdzB,KAAM,SACN0B,KAAM,WAER,CACED,aAAc,QACdzB,KAAM,OACN0B,KAAM,UAGV1B,KAAM,OACN2B,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEE,aAAc,UACdzB,KAAM,KACN0B,KAAM,WAER,CACED,aAAc,YACdzB,KAAM,MACN0B,KAAM,aAER,CACED,aAAc,YACdzB,KAAM,UACN0B,KAAM,aAER,CACED,aAAc,QACdzB,KAAM,OACN0B,KAAM,UAGV1B,KAAM,YACN2B,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,GACRvB,KAAM,QACN2B,QAAS,CACP,CACEF,aAAc,UACdzB,KAAM,GACN0B,KAAM,YAGVE,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,GACRvB,KAAM,oBACN2B,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEE,aAAc,UACdzB,KAAM,OACN0B,KAAM,WAER,CACED,aAAc,UACdzB,KAAM,KACN0B,K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","file":"static/js/main.0ef8744f.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 145;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 146;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t182,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 147;\nmodule.exports = webpackAsyncContext;","\r\nexport const config: { [env: string]: any } = {\r\n    chainId: 250,\r\n    networkName: 'Fantom Opera Main net',\r\n    explorerUrl: 'https://alfajores-blockscout.celo-testnet.org/',\r\n    defaultProvider: \"https://rpc.fantom.network\",\r\n    chain: \"FTM\",\r\n    network: \"mainnet\",\r\n    networkId: 250,\r\n    nativeCurrency: { \"name\": \"Fantom\", \"symbol\": \"FTM\", \"decimals\": 18 },\r\n    nftContractAddress: \"0x71909A03f9076c6330EeD80d34196E6498d2C921\"\r\n};\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { config } from \"../config\"\r\nconst usePromptNetwork = () => {\r\n  const [networkPrompt, setNetworkPrompt] = useState(false);\r\n  const { ethereum } = window as any;\r\n\r\n  /**\r\n   * For more read https://github.com/NoahZinsmeister/web3-react/blob/6737868693adb7e1e28ae80499e19901e9aae45a/example/hooks.ts#L33\r\n   * And https://docs.metamask.io/guide/ethereum-provider.html\r\n   * @param provider ethereum provider in this case is the window.ethereum available due to metamask being installed\r\n   * @returns\r\n   */\r\n  const connectToNetwork = async (provider: any) => {\r\n    await provider.request({\r\n      method: 'wallet_addEthereumChain',\r\n      params: [\r\n        {\r\n          chainId: `0x${config.chainId.toString(16)}`,\r\n          chainName: config.networkName,\r\n          nativeCurrency: {\r\n            name: 'CELO',\r\n            symbol: 'celo',\r\n            decimals: 18,\r\n          },\r\n          rpcUrls: [config.defaultProvider],\r\n          blockExplorerUrls: [config.explorerUrl],\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!networkPrompt) {\r\n      console.log(config);\r\n      console.log(ethereum);\r\n\r\n      if (ethereum && ethereum.networkVersion !== \"44787\") {\r\n        connectToNetwork(ethereum);\r\n        setNetworkPrompt(true);\r\n      }\r\n    }\r\n  }, [networkPrompt, ethereum]);\r\n};\r\n\r\nexport default usePromptNetwork;","import { IonBadge, IonButton, IonButtons, IonChip, IonImg, IonText } from '@ionic/react';\r\nimport './ExploreContainer.css';\r\nimport Web3Modal from \"web3modal\";\r\nimport { ethers } from \"ethers\"\r\nimport { useWallet } from \"use-wallet\"\r\nconst LoginButton: React.FC = () => {\r\n\r\n    const { connect, account, balance } = useWallet()\r\n    const img = \"https://smol.mypinata.cloud/ipfs/QmTWzBGYm8HrmiVRwcxarQ3yzUaXD3vHw5XcypZxYUq86S\"\r\n    if (account) {\r\n        return <>\r\n            <IonText color=\"success\">\r\n                {String(parseFloat(balance) / 1000000000000000000).slice(0, 4)} FTM\r\n            </IonText>\r\n            <IonChip color=\"success\">\r\n                <IonImg src={img} />\r\n                {account.slice(0, 6)}...{account.slice(38, 55)}\r\n            </IonChip>\r\n            <IonButton color=\"medium\" >\r\n            </IonButton>\r\n        </>\r\n    }\r\n    return (<IonButton fill='solid' color=\"primary\" onClick={async () => {\r\n        connect(\"injected\")\r\n    }}> Connect\r\n    </IonButton >);\r\n};\r\n\r\nexport default LoginButton;\r\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { Ownable, OwnableInterface } from \"../Ownable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class Ownable__factory {\n  static readonly abi = _abi;\n  static createInterface(): OwnableInterface {\n    return new utils.Interface(_abi) as OwnableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Ownable {\n    return new Contract(address, _abi, signerOrProvider) as Ownable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { Pausable, PausableInterface } from \"../Pausable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class Pausable__factory {\n  static readonly abi = _abi;\n  static createInterface(): PausableInterface {\n    return new utils.Interface(_abi) as PausableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Pausable {\n    return new Contract(address, _abi, signerOrProvider) as Pausable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { ERC721, ERC721Interface } from \"../ERC721\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b506040516200272b3803806200272b833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6123a580620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061167f565b6102bc565b6040516100fb91906119f9565b60405180910390f35b61010c61039e565b6040516101199190611a14565b60405180910390f35b61013c600480360381019061013791906116d1565b610430565b6040516101499190611992565b60405180910390f35b61016c60048036038101906101679190611643565b6104b5565b005b6101886004803603810190610183919061153d565b6105cd565b005b6101a4600480360381019061019f919061153d565b61062d565b005b6101c060048036038101906101bb91906116d1565b61064d565b6040516101cd9190611992565b60405180910390f35b6101f060048036038101906101eb91906114d8565b6106ff565b6040516101fd9190611bb6565b60405180910390f35b61020e6107b7565b60405161021b9190611a14565b60405180910390f35b61023e60048036038101906102399190611607565b610849565b005b61025a6004803603810190610255919061158c565b6109ca565b005b610276600480360381019061027191906116d1565b610a2c565b6040516102839190611a14565b60405180910390f35b6102a660048036038101906102a19190611501565b610ad3565b6040516102b391906119f9565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610b67565b5b9050919050565b6060600080546103ad90611ddb565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ddb565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610bd1565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611b16565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c08261064d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611b76565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610550610c3d565b73ffffffffffffffffffffffffffffffffffffffff16148061057f575061057e81610579610c3d565b610ad3565b5b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590611ab6565b60405180910390fd5b6105c88383610c45565b505050565b6105de6105d8610c3d565b82610cfe565b61061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490611b96565b60405180910390fd5b610628838383610ddc565b505050565b610648838383604051806020016040528060008152506109ca565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed90611af6565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076790611ad6565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107c690611ddb565b80601f01602080910402602001604051908101604052809291908181526020018280546107f290611ddb565b801561083f5780601f106108145761010080835404028352916020019161083f565b820191906000526020600020905b81548152906001019060200180831161082257829003601f168201915b5050505050905090565b610851610c3d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b690611a76565b60405180910390fd5b80600560006108cc610c3d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610979610c3d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109be91906119f9565b60405180910390a35050565b6109db6109d5610c3d565b83610cfe565b610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1190611b96565b60405180910390fd5b610a2684848484611038565b50505050565b6060610a3782610bd1565b610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d90611b56565b60405180910390fd5b6000610a80611094565b90506000815111610aa05760405180602001604052806000815250610acb565b80610aaa846110ab565b604051602001610abb92919061196e565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610cb88361064d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d0982610bd1565b610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611a96565b60405180910390fd5b6000610d538361064d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610dc257508373ffffffffffffffffffffffffffffffffffffffff16610daa84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610dd35750610dd28185610ad3565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610dfc8261064d565b73ffffffffffffffffffffffffffffffffffffffff1614610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4990611b36565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb990611a56565b60405180910390fd5b610ecd838383611258565b610ed8600082610c45565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f289190611cf1565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7f9190611c6a565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611043848484610ddc565b61104f8484848461125d565b61108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590611a36565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008214156110f3576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611253565b600082905060005b6000821461112557808061110e90611e3e565b915050600a8261111e9190611cc0565b91506110fb565b60008167ffffffffffffffff811115611167577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111995781602001600182028036833780820191505090505b5090505b6000851461124c576001826111b29190611cf1565b9150600a856111c19190611e87565b60306111cd9190611c6a565b60f81b818381518110611209577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856112459190611cc0565b945061119d565b8093505050505b919050565b505050565b600061127e8473ffffffffffffffffffffffffffffffffffffffff166113f4565b156113e7578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112a7610c3d565b8786866040518563ffffffff1660e01b81526004016112c994939291906119ad565b602060405180830381600087803b1580156112e357600080fd5b505af192505050801561131457506040513d601f19601f8201168201806040525081019061131191906116a8565b60015b611397573d8060008114611344576040519150601f19603f3d011682016040523d82523d6000602084013e611349565b606091505b5060008151141561138f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138690611a36565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113ec565b600190505b949350505050565b600080823b905060008111915050919050565b600061141a61141584611bf6565b611bd1565b90508281526020810184848401111561143257600080fd5b61143d848285611d99565b509392505050565b60008135905061145481612313565b92915050565b6000813590506114698161232a565b92915050565b60008135905061147e81612341565b92915050565b60008151905061149381612341565b92915050565b600082601f8301126114aa57600080fd5b81356114ba848260208601611407565b91505092915050565b6000813590506114d281612358565b92915050565b6000602082840312156114ea57600080fd5b60006114f884828501611445565b91505092915050565b6000806040838503121561151457600080fd5b600061152285828601611445565b925050602061153385828601611445565b9150509250929050565b60008060006060848603121561155257600080fd5b600061156086828701611445565b935050602061157186828701611445565b9250506040611582868287016114c3565b9150509250925092565b600080600080608085870312156115a257600080fd5b60006115b087828801611445565b94505060206115c187828801611445565b93505060406115d2878288016114c3565b925050606085013567ffffffffffffffff8111156115ef57600080fd5b6115fb87828801611499565b91505092959194509250565b6000806040838503121561161a57600080fd5b600061162885828601611445565b92505060206116398582860161145a565b9150509250929050565b6000806040838503121561165657600080fd5b600061166485828601611445565b9250506020611675858286016114c3565b9150509250929050565b60006020828403121561169157600080fd5b600061169f8482850161146f565b91505092915050565b6000602082840312156116ba57600080fd5b60006116c884828501611484565b91505092915050565b6000602082840312156116e357600080fd5b60006116f1848285016114c3565b91505092915050565b61170381611d25565b82525050565b61171281611d37565b82525050565b600061172382611c27565b61172d8185611c3d565b935061173d818560208601611da8565b61174681611f74565b840191505092915050565b600061175c82611c32565b6117668185611c4e565b9350611776818560208601611da8565b61177f81611f74565b840191505092915050565b600061179582611c32565b61179f8185611c5f565b93506117af818560208601611da8565b80840191505092915050565b60006117c8603283611c4e565b91506117d382611f85565b604082019050919050565b60006117eb602483611c4e565b91506117f682611fd4565b604082019050919050565b600061180e601983611c4e565b915061181982612023565b602082019050919050565b6000611831602c83611c4e565b915061183c8261204c565b604082019050919050565b6000611854603883611c4e565b915061185f8261209b565b604082019050919050565b6000611877602a83611c4e565b9150611882826120ea565b604082019050919050565b600061189a602983611c4e565b91506118a582612139565b604082019050919050565b60006118bd602c83611c4e565b91506118c882612188565b604082019050919050565b60006118e0602983611c4e565b91506118eb826121d7565b604082019050919050565b6000611903602f83611c4e565b915061190e82612226565b604082019050919050565b6000611926602183611c4e565b915061193182612275565b604082019050919050565b6000611949603183611c4e565b9150611954826122c4565b604082019050919050565b61196881611d8f565b82525050565b600061197a828561178a565b9150611986828461178a565b91508190509392505050565b60006020820190506119a760008301846116fa565b92915050565b60006080820190506119c260008301876116fa565b6119cf60208301866116fa565b6119dc604083018561195f565b81810360608301526119ee8184611718565b905095945050505050565b6000602082019050611a0e6000830184611709565b92915050565b60006020820190508181036000830152611a2e8184611751565b905092915050565b60006020820190508181036000830152611a4f816117bb565b9050919050565b60006020820190508181036000830152611a6f816117de565b9050919050565b60006020820190508181036000830152611a8f81611801565b9050919050565b60006020820190508181036000830152611aaf81611824565b9050919050565b60006020820190508181036000830152611acf81611847565b9050919050565b60006020820190508181036000830152611aef8161186a565b9050919050565b60006020820190508181036000830152611b0f8161188d565b9050919050565b60006020820190508181036000830152611b2f816118b0565b9050919050565b60006020820190508181036000830152611b4f816118d3565b9050919050565b60006020820190508181036000830152611b6f816118f6565b9050919050565b60006020820190508181036000830152611b8f81611919565b9050919050565b60006020820190508181036000830152611baf8161193c565b9050919050565b6000602082019050611bcb600083018461195f565b92915050565b6000611bdb611bec565b9050611be78282611e0d565b919050565b6000604051905090565b600067ffffffffffffffff821115611c1157611c10611f45565b5b611c1a82611f74565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c7582611d8f565b9150611c8083611d8f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cb557611cb4611eb8565b5b828201905092915050565b6000611ccb82611d8f565b9150611cd683611d8f565b925082611ce657611ce5611ee7565b5b828204905092915050565b6000611cfc82611d8f565b9150611d0783611d8f565b925082821015611d1a57611d19611eb8565b5b828203905092915050565b6000611d3082611d6f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611dc6578082015181840152602081019050611dab565b83811115611dd5576000848401525b50505050565b60006002820490506001821680611df357607f821691505b60208210811415611e0757611e06611f16565b5b50919050565b611e1682611f74565b810181811067ffffffffffffffff82111715611e3557611e34611f45565b5b80604052505050565b6000611e4982611d8f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e7c57611e7b611eb8565b5b600182019050919050565b6000611e9282611d8f565b9150611e9d83611d8f565b925082611ead57611eac611ee7565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b61231c81611d25565b811461232757600080fd5b50565b61233381611d37565b811461233e57600080fd5b50565b61234a81611d43565b811461235557600080fd5b50565b61236181611d8f565b811461236c57600080fd5b5056fea26469706673582212200a5b01099b01a8eb6ef7a835a55253f35a11b7fb5bf01dde44edec03760ccee464736f6c63430008020033\";\n\ntype ERC721ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC721ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC721__factory extends ContractFactory {\n  constructor(...args: ERC721ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC721> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC721 {\n    return super.attach(address) as ERC721;\n  }\n  connect(signer: Signer): ERC721__factory {\n    return super.connect(signer) as ERC721__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC721Interface {\n    return new utils.Interface(_abi) as ERC721Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {\n    return new Contract(address, _abi, signerOrProvider) as ERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC721Enumerable,\n  ERC721EnumerableInterface,\n} from \"../ERC721Enumerable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC721Enumerable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC721EnumerableInterface {\n    return new utils.Interface(_abi) as ERC721EnumerableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC721Enumerable {\n    return new Contract(address, _abi, signerOrProvider) as ERC721Enumerable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721Enumerable,\n  IERC721EnumerableInterface,\n} from \"../IERC721Enumerable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721Enumerable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721EnumerableInterface {\n    return new utils.Interface(_abi) as IERC721EnumerableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721Enumerable {\n    return new Contract(address, _abi, signerOrProvider) as IERC721Enumerable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721Metadata,\n  IERC721MetadataInterface,\n} from \"../IERC721Metadata\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721Metadata__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721MetadataInterface {\n    return new utils.Interface(_abi) as IERC721MetadataInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721Metadata {\n    return new Contract(address, _abi, signerOrProvider) as IERC721Metadata;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC721, IERC721Interface } from \"../IERC721\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721Interface {\n    return new utils.Interface(_abi) as IERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721 {\n    return new Contract(address, _abi, signerOrProvider) as IERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721Receiver,\n  IERC721ReceiverInterface,\n} from \"../IERC721Receiver\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721Receiver__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721ReceiverInterface {\n    return new utils.Interface(_abi) as IERC721ReceiverInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721Receiver {\n    return new Contract(address, _abi, signerOrProvider) as IERC721Receiver;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ERC165, ERC165Interface } from \"../ERC165\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC165__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC165Interface {\n    return new utils.Interface(_abi) as ERC165Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC165 {\n    return new Contract(address, _abi, signerOrProvider) as ERC165;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC165, IERC165Interface } from \"../IERC165\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC165__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC165Interface {\n    return new utils.Interface(_abi) as IERC165Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC165 {\n    return new Contract(address, _abi, signerOrProvider) as IERC165;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { MagePunks, MagePunksInterface } from \"../MagePunks\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"_mintPrice\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"supply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"URI\",\n        type: \"string\",\n      },\n    ],\n    name: \"updateBaseURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"PRICE\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateMintPrice\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"SUPPLY\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateSupply\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526040518060600160405280603681526020016200413d60369139600c90805190602001906200003592919062000205565b506040600d5568056bc75e2d63100000600e553480156200005557600080fd5b506040518060400160405280600981526020017f4d61676550756e6b7300000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f4d41474550554e4b0000000000000000000000000000000000000000000000008152508160009080519060200190620000da92919062000205565b508060019080519060200190620000f392919062000205565b5050506000600a60006101000a81548160ff02191690831515021790555062000131620001256200013760201b60201c565b6200013f60201b60201c565b6200031a565b600033905090565b6000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200021390620002b5565b90600052602060002090601f01602090048101928262000237576000855562000283565b82601f106200025257805160ff191683800117855562000283565b8280016001018555821562000283579182015b828111156200028257825182559160200191906001019062000265565b5b50905062000292919062000296565b5090565b5b80821115620002b157600081600090555060010162000297565b5090565b60006002820490506001821680620002ce57607f821691505b60208210811415620002e557620002e4620002eb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b613e13806200032a6000396000f3fe6080604052600436106101c15760003560e01c80634f6ccce7116100f75780638da5cb5b11610095578063b88d4fde11610064578063b88d4fde146105e6578063c87b56dd1461060f578063e985e9c51461064c578063f2fde38b14610689576101c1565b80638da5cb5b1461053e578063931688cb1461056957806395d89b4114610592578063a22cb465146105bd576101c1565b80636bd08049116100d15780636bd08049146104aa57806370a08231146104d3578063715018a6146105105780638456cb5914610527576101c1565b80634f6ccce7146104055780635c975abb146104425780636352211e1461046d576101c1565b80631249c58b116101645780632f745c591161013e5780632f745c59146103715780633ccfd60b146103ae5780633f4ba83a146103c557806342842e0e146103dc576101c1565b80631249c58b1461031357806318160ddd1461031d57806323b872dd14610348576101c1565b8063047fc9aa116101a0578063047fc9aa1461025757806306fdde0314610282578063081812fc146102ad578063095ea7b3146102ea576101c1565b8062728e46146101c657806301ffc9a7146101ef5780630387da421461022c575b600080fd5b3480156101d257600080fd5b506101ed60048036038101906101e89190612d77565b6106b2565b005b3480156101fb57600080fd5b5061021660048036038101906102119190612ce4565b610738565b60405161022391906131c2565b60405180910390f35b34801561023857600080fd5b5061024161074a565b60405161024e919061345f565b60405180910390f35b34801561026357600080fd5b5061026c610750565b604051610279919061345f565b60405180910390f35b34801561028e57600080fd5b50610297610761565b6040516102a491906131dd565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf9190612d77565b6107f3565b6040516102e1919061315b565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c9190612ca8565b610878565b005b61031b610990565b005b34801561032957600080fd5b50610332610a56565b60405161033f919061345f565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190612ba2565b610a63565b005b34801561037d57600080fd5b5061039860048036038101906103939190612ca8565b610ac3565b6040516103a5919061345f565b60405180910390f35b3480156103ba57600080fd5b506103c3610b68565b005b3480156103d157600080fd5b506103da610c79565b005b3480156103e857600080fd5b5061040360048036038101906103fe9190612ba2565b610cff565b005b34801561041157600080fd5b5061042c60048036038101906104279190612d77565b610d1f565b604051610439919061345f565b60405180910390f35b34801561044e57600080fd5b50610457610db6565b60405161046491906131c2565b60405180910390f35b34801561047957600080fd5b50610494600480360381019061048f9190612d77565b610dcd565b6040516104a1919061315b565b60405180910390f35b3480156104b657600080fd5b506104d160048036038101906104cc9190612d77565b610e7f565b005b3480156104df57600080fd5b506104fa60048036038101906104f59190612b3d565b610f05565b604051610507919061345f565b60405180910390f35b34801561051c57600080fd5b50610525610fbd565b005b34801561053357600080fd5b5061053c611045565b005b34801561054a57600080fd5b506105536110cb565b604051610560919061315b565b60405180910390f35b34801561057557600080fd5b50610590600480360381019061058b9190612d36565b6110f5565b005b34801561059e57600080fd5b506105a761118b565b6040516105b491906131dd565b60405180910390f35b3480156105c957600080fd5b506105e460048036038101906105df9190612c6c565b61121d565b005b3480156105f257600080fd5b5061060d60048036038101906106089190612bf1565b61139e565b005b34801561061b57600080fd5b5061063660048036038101906106319190612d77565b611400565b60405161064391906131dd565b60405180910390f35b34801561065857600080fd5b50610673600480360381019061066e9190612b66565b61144c565b60405161068091906131c2565b60405180910390f35b34801561069557600080fd5b506106b060048036038101906106ab9190612b3d565b6114e0565b005b6106ba6115d8565b73ffffffffffffffffffffffffffffffffffffffff166106d86110cb565b73ffffffffffffffffffffffffffffffffffffffff161461072e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610725906133bf565b60405180910390fd5b80600e8190555050565b6000610743826115e0565b9050919050565b600e5481565b600061075c600b61165a565b905090565b606060008054610770906136b5565b80601f016020809104026020016040519081016040528092919081815260200182805461079c906136b5565b80156107e95780601f106107be576101008083540402835291602001916107e9565b820191906000526020600020905b8154815290600101906020018083116107cc57829003601f168201915b5050505050905090565b60006107fe82611668565b61083d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108349061339f565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061088382610dcd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb906133ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109136115d8565b73ffffffffffffffffffffffffffffffffffffffff16148061094257506109418161093c6115d8565b61144c565b5b610981576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109789061331f565b60405180910390fd5b61098b83836116d4565b505050565b610998610db6565b156109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf906132ff565b60405180910390fd5b6109e2600b61178d565b60006109ee600b61165a565b9050600d548111156109ff57600080fd5b610a076110cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4957600e54341015610a4857600080fd5b5b610a5333826117a3565b50565b6000600880549050905090565b610a74610a6e6115d8565b826117c1565b610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061341f565b60405180910390fd5b610abe83838361189f565b505050565b6000610ace83610f05565b8210610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b069061321f565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610b706115d8565b73ffffffffffffffffffffffffffffffffffffffff16610b8e6110cb565b73ffffffffffffffffffffffffffffffffffffffff1614610be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdb906133bf565b60405180910390fd5b60004711610bf157600080fd5b610bf96110cb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c3057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610c76573d6000803e3d6000fd5b50565b610c816115d8565b73ffffffffffffffffffffffffffffffffffffffff16610c9f6110cb565b73ffffffffffffffffffffffffffffffffffffffff1614610cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cec906133bf565b60405180910390fd5b610cfd611afb565b565b610d1a8383836040518060200160405280600081525061139e565b505050565b6000610d29610a56565b8210610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d619061343f565b60405180910390fd5b60088281548110610da4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6000600a60009054906101000a900460ff16905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d9061335f565b60405180910390fd5b80915050919050565b610e876115d8565b73ffffffffffffffffffffffffffffffffffffffff16610ea56110cb565b73ffffffffffffffffffffffffffffffffffffffff1614610efb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef2906133bf565b60405180910390fd5b80600d8190555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d9061333f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610fc56115d8565b73ffffffffffffffffffffffffffffffffffffffff16610fe36110cb565b73ffffffffffffffffffffffffffffffffffffffff1614611039576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611030906133bf565b60405180910390fd5b6110436000611b9d565b565b61104d6115d8565b73ffffffffffffffffffffffffffffffffffffffff1661106b6110cb565b73ffffffffffffffffffffffffffffffffffffffff16146110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b8906133bf565b60405180910390fd5b6110c9611c63565b565b6000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110fd6115d8565b73ffffffffffffffffffffffffffffffffffffffff1661111b6110cb565b73ffffffffffffffffffffffffffffffffffffffff1614611171576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611168906133bf565b60405180910390fd5b80600c9080519060200190611187929190612961565b5050565b60606001805461119a906136b5565b80601f01602080910402602001604051908101604052809291908181526020018280546111c6906136b5565b80156112135780601f106111e857610100808354040283529160200191611213565b820191906000526020600020905b8154815290600101906020018083116111f657829003601f168201915b5050505050905090565b6112256115d8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128a906132bf565b60405180910390fd5b80600560006112a06115d8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661134d6115d8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161139291906131c2565b60405180910390a35050565b6113af6113a96115d8565b836117c1565b6113ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e59061341f565b60405180910390fd5b6113fa84848484611d06565b50505050565b606061140b82611668565b61141457600080fd5b61141c611d62565b61142583611df4565b60405160200161143692919061312c565b6040516020818303038152906040529050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114e86115d8565b73ffffffffffffffffffffffffffffffffffffffff166115066110cb565b73ffffffffffffffffffffffffffffffffffffffff161461155c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611553906133bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c39061325f565b60405180910390fd5b6115d581611b9d565b50565b600033905090565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611653575061165282611fa1565b5b9050919050565b600081600001549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661174783610dcd565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001816000016000828254019250508190555050565b6117bd828260405180602001604052806000815250612083565b5050565b60006117cc82611668565b61180b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611802906132df565b60405180910390fd5b600061181683610dcd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061188557508373ffffffffffffffffffffffffffffffffffffffff1661186d846107f3565b73ffffffffffffffffffffffffffffffffffffffff16145b806118965750611895818561144c565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166118bf82610dcd565b73ffffffffffffffffffffffffffffffffffffffff1614611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190c906133df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c9061329f565b60405180910390fd5b6119908383836120de565b61199b6000826116d4565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119eb91906135cb565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a429190613544565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611b03610db6565b611b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b39906131ff565b60405180910390fd5b6000600a60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b866115d8565b604051611b93919061315b565b60405180910390a1565b6000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c6b610db6565b15611cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca2906132ff565b60405180910390fd5b6001600a60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cef6115d8565b604051611cfc919061315b565b60405180910390a1565b611d1184848461189f565b611d1d848484846120ee565b611d5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d539061323f565b60405180910390fd5b50505050565b6060600c8054611d71906136b5565b80601f0160208091040260200160405190810160405280929190818152602001828054611d9d906136b5565b8015611dea5780601f10611dbf57610100808354040283529160200191611dea565b820191906000526020600020905b815481529060010190602001808311611dcd57829003601f168201915b5050505050905090565b60606000821415611e3c576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f9c565b600082905060005b60008214611e6e578080611e5790613718565b915050600a82611e67919061359a565b9150611e44565b60008167ffffffffffffffff811115611eb0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611ee25781602001600182028036833780820191505090505b5090505b60008514611f9557600182611efb91906135cb565b9150600a85611f0a9190613761565b6030611f169190613544565b60f81b818381518110611f52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611f8e919061359a565b9450611ee6565b8093505050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061206c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061207c575061207b82612285565b5b9050919050565b61208d83836122ef565b61209a60008484846120ee565b6120d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d09061323f565b60405180910390fd5b505050565b6120e98383836124bd565b505050565b600061210f8473ffffffffffffffffffffffffffffffffffffffff166125d1565b15612278578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026121386115d8565b8786866040518563ffffffff1660e01b815260040161215a9493929190613176565b602060405180830381600087803b15801561217457600080fd5b505af19250505080156121a557506040513d601f19601f820116820180604052508101906121a29190612d0d565b60015b612228573d80600081146121d5576040519150601f19603f3d011682016040523d82523d6000602084013e6121da565b606091505b50600081511415612220576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122179061323f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061227d565b600190505b949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561235f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123569061337f565b60405180910390fd5b61236881611668565b156123a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239f9061327f565b60405180910390fd5b6123b4600083836120de565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546124049190613544565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6124c88383836125e4565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561250b57612506816125e9565b61254a565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612549576125488382612632565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561258d576125888161279f565b6125cc565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146125cb576125ca82826128e2565b5b5b505050565b600080823b905060008111915050919050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000600161263f84610f05565b61264991906135cb565b905060006007600084815260200190815260200160002054905081811461272e576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506127b391906135cb565b9050600060096000848152602001908152602001600020549050600060088381548110612809577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490508060088381548110612851577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806128c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006128ed83610f05565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b82805461296d906136b5565b90600052602060002090601f01602090048101928261298f57600085556129d6565b82601f106129a857805160ff19168380011785556129d6565b828001600101855582156129d6579182015b828111156129d55782518255916020019190600101906129ba565b5b5090506129e391906129e7565b5090565b5b80821115612a005760008160009055506001016129e8565b5090565b6000612a17612a128461349f565b61347a565b905082815260208101848484011115612a2f57600080fd5b612a3a848285613673565b509392505050565b6000612a55612a50846134d0565b61347a565b905082815260208101848484011115612a6d57600080fd5b612a78848285613673565b509392505050565b600081359050612a8f81613d81565b92915050565b600081359050612aa481613d98565b92915050565b600081359050612ab981613daf565b92915050565b600081519050612ace81613daf565b92915050565b600082601f830112612ae557600080fd5b8135612af5848260208601612a04565b91505092915050565b600082601f830112612b0f57600080fd5b8135612b1f848260208601612a42565b91505092915050565b600081359050612b3781613dc6565b92915050565b600060208284031215612b4f57600080fd5b6000612b5d84828501612a80565b91505092915050565b60008060408385031215612b7957600080fd5b6000612b8785828601612a80565b9250506020612b9885828601612a80565b9150509250929050565b600080600060608486031215612bb757600080fd5b6000612bc586828701612a80565b9350506020612bd686828701612a80565b9250506040612be786828701612b28565b9150509250925092565b60008060008060808587031215612c0757600080fd5b6000612c1587828801612a80565b9450506020612c2687828801612a80565b9350506040612c3787828801612b28565b925050606085013567ffffffffffffffff811115612c5457600080fd5b612c6087828801612ad4565b91505092959194509250565b60008060408385031215612c7f57600080fd5b6000612c8d85828601612a80565b9250506020612c9e85828601612a95565b9150509250929050565b60008060408385031215612cbb57600080fd5b6000612cc985828601612a80565b9250506020612cda85828601612b28565b9150509250929050565b600060208284031215612cf657600080fd5b6000612d0484828501612aaa565b91505092915050565b600060208284031215612d1f57600080fd5b6000612d2d84828501612abf565b91505092915050565b600060208284031215612d4857600080fd5b600082013567ffffffffffffffff811115612d6257600080fd5b612d6e84828501612afe565b91505092915050565b600060208284031215612d8957600080fd5b6000612d9784828501612b28565b91505092915050565b612da9816135ff565b82525050565b612db881613611565b82525050565b6000612dc982613501565b612dd38185613517565b9350612de3818560208601613682565b612dec8161384e565b840191505092915050565b6000612e028261350c565b612e0c8185613528565b9350612e1c818560208601613682565b612e258161384e565b840191505092915050565b6000612e3b8261350c565b612e458185613539565b9350612e55818560208601613682565b80840191505092915050565b6000612e6e601483613528565b9150612e798261385f565b602082019050919050565b6000612e91602b83613528565b9150612e9c82613888565b604082019050919050565b6000612eb4603283613528565b9150612ebf826138d7565b604082019050919050565b6000612ed7602683613528565b9150612ee282613926565b604082019050919050565b6000612efa601c83613528565b9150612f0582613975565b602082019050919050565b6000612f1d602483613528565b9150612f288261399e565b604082019050919050565b6000612f40601983613528565b9150612f4b826139ed565b602082019050919050565b6000612f63602c83613528565b9150612f6e82613a16565b604082019050919050565b6000612f86601083613528565b9150612f9182613a65565b602082019050919050565b6000612fa9603883613528565b9150612fb482613a8e565b604082019050919050565b6000612fcc602a83613528565b9150612fd782613add565b604082019050919050565b6000612fef602983613528565b9150612ffa82613b2c565b604082019050919050565b6000613012602083613528565b915061301d82613b7b565b602082019050919050565b6000613035602c83613528565b915061304082613ba4565b604082019050919050565b6000613058600583613539565b915061306382613bf3565b600582019050919050565b600061307b602083613528565b915061308682613c1c565b602082019050919050565b600061309e602983613528565b91506130a982613c45565b604082019050919050565b60006130c1602183613528565b91506130cc82613c94565b604082019050919050565b60006130e4603183613528565b91506130ef82613ce3565b604082019050919050565b6000613107602c83613528565b915061311282613d32565b604082019050919050565b61312681613669565b82525050565b60006131388285612e30565b91506131448284612e30565b915061314f8261304b565b91508190509392505050565b60006020820190506131706000830184612da0565b92915050565b600060808201905061318b6000830187612da0565b6131986020830186612da0565b6131a5604083018561311d565b81810360608301526131b78184612dbe565b905095945050505050565b60006020820190506131d76000830184612daf565b92915050565b600060208201905081810360008301526131f78184612df7565b905092915050565b6000602082019050818103600083015261321881612e61565b9050919050565b6000602082019050818103600083015261323881612e84565b9050919050565b6000602082019050818103600083015261325881612ea7565b9050919050565b6000602082019050818103600083015261327881612eca565b9050919050565b6000602082019050818103600083015261329881612eed565b9050919050565b600060208201905081810360008301526132b881612f10565b9050919050565b600060208201905081810360008301526132d881612f33565b9050919050565b600060208201905081810360008301526132f881612f56565b9050919050565b6000602082019050818103600083015261331881612f79565b9050919050565b6000602082019050818103600083015261333881612f9c565b9050919050565b6000602082019050818103600083015261335881612fbf565b9050919050565b6000602082019050818103600083015261337881612fe2565b9050919050565b6000602082019050818103600083015261339881613005565b9050919050565b600060208201905081810360008301526133b881613028565b9050919050565b600060208201905081810360008301526133d88161306e565b9050919050565b600060208201905081810360008301526133f881613091565b9050919050565b60006020820190508181036000830152613418816130b4565b9050919050565b60006020820190508181036000830152613438816130d7565b9050919050565b60006020820190508181036000830152613458816130fa565b9050919050565b6000602082019050613474600083018461311d565b92915050565b6000613484613495565b905061349082826136e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156134ba576134b961381f565b5b6134c38261384e565b9050602081019050919050565b600067ffffffffffffffff8211156134eb576134ea61381f565b5b6134f48261384e565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061354f82613669565b915061355a83613669565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561358f5761358e613792565b5b828201905092915050565b60006135a582613669565b91506135b083613669565b9250826135c0576135bf6137c1565b5b828204905092915050565b60006135d682613669565b91506135e183613669565b9250828210156135f4576135f3613792565b5b828203905092915050565b600061360a82613649565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156136a0578082015181840152602081019050613685565b838111156136af576000848401525b50505050565b600060028204905060018216806136cd57607f821691505b602082108114156136e1576136e06137f0565b5b50919050565b6136f08261384e565b810181811067ffffffffffffffff8211171561370f5761370e61381f565b5b80604052505050565b600061372382613669565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561375657613755613792565b5b600182019050919050565b600061376c82613669565b915061377783613669565b925082613787576137866137c1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b613d8a816135ff565b8114613d9557600080fd5b50565b613da181613611565b8114613dac57600080fd5b50565b613db88161361d565b8114613dc357600080fd5b50565b613dcf81613669565b8114613dda57600080fd5b5056fea2646970667358221220521a4d16dc9b8033b6b54be6522f9a7d47b974b431875d2e4d51246244d8213a64736f6c63430008020033697066733a2f2f516d59566f4e734c4c47466b7a4b4d59315039617676326f377755566b534e5569585839417255596e45315077342f\";\n\ntype MagePunksConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MagePunksConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class MagePunks__factory extends ContractFactory {\n  constructor(...args: MagePunksConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<MagePunks> {\n    return super.deploy(overrides || {}) as Promise<MagePunks>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): MagePunks {\n    return super.attach(address) as MagePunks;\n  }\n  connect(signer: Signer): MagePunks__factory {\n    return super.connect(signer) as MagePunks__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MagePunksInterface {\n    return new utils.Interface(_abi) as MagePunksInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MagePunks {\n    return new Contract(address, _abi, signerOrProvider) as MagePunks;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { MagicalItem, MagicalItemInterface } from \"../MagicalItem\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"exists\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"newuri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051806080016040528060598152602001620041e9605991396200003d816200006460201b60201c565b506200005e620000526200008060201b60201c565b6200008860201b60201c565b62000263565b80600290805190602001906200007c9291906200014e565b5050565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200015c90620001fe565b90600052602060002090601f016020900481019282620001805760008555620001cc565b82601f106200019b57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cb578251825591602001919060010190620001ae565b5b509050620001db9190620001df565b5090565b5b80821115620001fa576000816000905550600101620001e0565b5090565b600060028204905060018216806200021757607f821691505b602082108114156200022e576200022d62000234565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b613f7680620002736000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c8063715018a6116100a2578063bd85b03911610071578063bd85b039146102da578063e985e9c51461030a578063f242432a1461033a578063f2fde38b14610356578063f5298aca1461037257610115565b8063715018a61461027a578063731133e9146102845780638da5cb5b146102a0578063a22cb465146102be57610115565b80631f7fdffa116100e95780631f7fdffa146101c65780632eb2c2d6146101e25780634e1273f4146101fe5780634f558e791461022e5780636b20c4541461025e57610115565b8062fdd58e1461011a57806301ffc9a71461014a57806302fe53051461017a5780630e89341c14610196575b600080fd5b610134600480360381019061012f9190612cd4565b61038e565b6040516101419190613586565b60405180910390f35b610164600480360381019061015f9190612e46565b610457565b6040516101719190613369565b60405180910390f35b610194600480360381019061018f9190612e98565b610539565b005b6101b060048036038101906101ab9190612ed9565b6105c1565b6040516101bd9190613384565b60405180910390f35b6101e060048036038101906101db9190612bed565b610655565b005b6101fc60048036038101906101f79190612a20565b6106e3565b005b61021860048036038101906102139190612dda565b610784565b6040516102259190613310565b60405180910390f35b61024860048036038101906102439190612ed9565b610935565b6040516102559190613369565b60405180910390f35b61027860048036038101906102739190612b6e565b610949565b005b6102826109e6565b005b61029e60048036038101906102999190612d5f565b610a6e565b005b6102a8610afc565b6040516102b59190613233565b60405180910390f35b6102d860048036038101906102d39190612c98565b610b26565b005b6102f460048036038101906102ef9190612ed9565b610ca7565b6040516103019190613586565b60405180910390f35b610324600480360381019061031f91906129e4565b610cc4565b6040516103319190613369565b60405180910390f35b610354600480360381019061034f9190612adf565b610d58565b005b610370600480360381019061036b91906129bb565b610df9565b005b61038c60048036038101906103879190612d10565b610ef1565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f6906133e6565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061052257507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610532575061053182610f8e565b5b9050919050565b610541610ff8565b73ffffffffffffffffffffffffffffffffffffffff1661055f610afc565b73ffffffffffffffffffffffffffffffffffffffff16146105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac906134e6565b60405180910390fd5b6105be81611000565b50565b6060600280546105d09061385a565b80601f01602080910402602001604051908101604052809291908181526020018280546105fc9061385a565b80156106495780601f1061061e57610100808354040283529160200191610649565b820191906000526020600020905b81548152906001019060200180831161062c57829003601f168201915b50505050509050919050565b61065d610ff8565b73ffffffffffffffffffffffffffffffffffffffff1661067b610afc565b73ffffffffffffffffffffffffffffffffffffffff16146106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c8906134e6565b60405180910390fd5b6106dd8484848461101a565b50505050565b6106eb610ff8565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061073157506107308561072b610ff8565b610cc4565b5b610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076790613486565b60405180910390fd5b61077d8585858585611284565b5050505050565b606081518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190613526565b60405180910390fd5b6000835167ffffffffffffffff81111561080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561083b5781602001602082028036833780820191505090505b50905060005b845181101561092a576108d4858281518110610886577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518583815181106108c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161038e565b82828151811061090d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080610923906138bd565b9050610841565b508091505092915050565b60008061094183610ca7565b119050919050565b610951610ff8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610997575061099683610991610ff8565b610cc4565b5b6109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd90613446565b60405180910390fd5b6109e18383836115e4565b505050565b6109ee610ff8565b73ffffffffffffffffffffffffffffffffffffffff16610a0c610afc565b73ffffffffffffffffffffffffffffffffffffffff1614610a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a59906134e6565b60405180910390fd5b610a6c60006118e1565b565b610a76610ff8565b73ffffffffffffffffffffffffffffffffffffffff16610a94610afc565b73ffffffffffffffffffffffffffffffffffffffff1614610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae1906134e6565b60405180910390fd5b610af6848484846119a7565b50505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16610b45610ff8565b73ffffffffffffffffffffffffffffffffffffffff161415610b9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9390613506565b60405180910390fd5b8060016000610ba9610ff8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c56610ff8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c9b9190613369565b60405180910390a35050565b600060046000838152602001908152602001600020549050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d60610ff8565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610da65750610da585610da0610ff8565b610cc4565b5b610de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddc90613446565b60405180910390fd5b610df28585858585611b3d565b5050505050565b610e01610ff8565b73ffffffffffffffffffffffffffffffffffffffff16610e1f610afc565b73ffffffffffffffffffffffffffffffffffffffff1614610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c906134e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ee5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edc90613406565b60405180910390fd5b610eee816118e1565b50565b610ef9610ff8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610f3f5750610f3e83610f39610ff8565b610cc4565b5b610f7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7590613446565b60405180910390fd5b610f89838383611dbf565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b80600290805190602001906110169291906126b3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190613566565b60405180910390fd5b81518351146110ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c590613546565b60405180910390fd5b60006110d8610ff8565b90506110e981600087878787611fdc565b60005b84518110156111ee5783818151811061112e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600080878481518110611172577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111d4919061371a565b9250508190555080806111e6906138bd565b9150506110ec565b508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611266929190613332565b60405180910390a461127d81600087878787611ff2565b5050505050565b81518351146112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90613546565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132f90613466565b60405180910390fd5b6000611342610ff8565b9050611352818787878787611fdc565b60005b845181101561154f576000858281518110611399577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008583815181106113de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561147f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611476906134c6565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611534919061371a565b9250508190555050505080611548906138bd565b9050611355565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516115c6929190613332565b60405180910390a46115dc818787878787611ff2565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164b906134a6565b60405180910390fd5b8051825114611698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168f90613546565b60405180910390fd5b60006116a2610ff8565b90506116c281856000868660405180602001604052806000815250611fdc565b60005b835181101561185b576000848281518110611709577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600084838151811061174e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e690613426565b60405180910390fd5b81810360008085815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050508080611853906138bd565b9150506116c5565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118d3929190613332565b60405180910390a450505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0e90613566565b60405180910390fd5b6000611a21610ff8565b9050611a4281600087611a33886121d9565b611a3c886121d9565b87611fdc565b8260008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aa1919061371a565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051611b1f9291906135a1565b60405180910390a4611b368160008787878761229f565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba490613466565b60405180910390fd5b6000611bb7610ff8565b9050611bd7818787611bc8886121d9565b611bd1886121d9565b87611fdc565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015611c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c65906134c6565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d23919061371a565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051611da09291906135a1565b60405180910390a4611db682888888888861229f565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e26906134a6565b60405180910390fd5b6000611e39610ff8565b9050611e6981856000611e4b876121d9565b611e54876121d9565b60405180602001604052806000815250611fdc565b600080600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef790613426565b60405180910390fd5b82810360008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051611fcd9291906135a1565b60405180910390a45050505050565b611fea868686868686612486565b505050505050565b6120118473ffffffffffffffffffffffffffffffffffffffff16612698565b156121d1578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161205795949392919061324e565b602060405180830381600087803b15801561207157600080fd5b505af19250505080156120a257506040513d601f19601f8201168201806040525081019061209f9190612e6f565b60015b612148576120ae613993565b806308c379a0141561210b57506120c3613e4e565b806120ce575061210d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121029190613384565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213f906133a6565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146121cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c6906133c6565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff81111561221e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561224c5781602001602082028036833780820191505090505b509050828160008151811061228a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6122be8473ffffffffffffffffffffffffffffffffffffffff16612698565b1561247e578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016123049594939291906132b6565b602060405180830381600087803b15801561231e57600080fd5b505af192505050801561234f57506040513d601f19601f8201168201806040525081019061234c9190612e6f565b60015b6123f55761235b613993565b806308c379a014156123b85750612370613e4e565b8061237b57506123ba565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123af9190613384565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ec906133a6565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461247c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612473906133c6565b60405180910390fd5b505b505050505050565b6124948686868686866126ab565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156125925760005b83518110156125905782818151811061250e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160046000868481518110612553577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015181526020019081526020016000206000828254612578919061371a565b9250508190555080612589906138bd565b90506124cc565b505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156126905760005b835181101561268e5782818151811061260c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160046000868481518110612651577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060008282546126769190613770565b9250508190555080612687906138bd565b90506125ca565b505b505050505050565b600080823b905060008111915050919050565b505050505050565b8280546126bf9061385a565b90600052602060002090601f0160209004810192826126e15760008555612728565b82601f106126fa57805160ff1916838001178555612728565b82800160010185558215612728579182015b8281111561272757825182559160200191906001019061270c565b5b5090506127359190612739565b5090565b5b8082111561275257600081600090555060010161273a565b5090565b6000612769612764846135ef565b6135ca565b9050808382526020820190508285602086028201111561278857600080fd5b60005b858110156127b8578161279e88826128aa565b84526020840193506020830192505060018101905061278b565b5050509392505050565b60006127d56127d08461361b565b6135ca565b905080838252602082019050828560208602820111156127f457600080fd5b60005b85811015612824578161280a88826129a6565b8452602084019350602083019250506001810190506127f7565b5050509392505050565b600061284161283c84613647565b6135ca565b90508281526020810184848401111561285957600080fd5b612864848285613818565b509392505050565b600061287f61287a84613678565b6135ca565b90508281526020810184848401111561289757600080fd5b6128a2848285613818565b509392505050565b6000813590506128b981613ee4565b92915050565b600082601f8301126128d057600080fd5b81356128e0848260208601612756565b91505092915050565b600082601f8301126128fa57600080fd5b813561290a8482602086016127c2565b91505092915050565b60008135905061292281613efb565b92915050565b60008135905061293781613f12565b92915050565b60008151905061294c81613f12565b92915050565b600082601f83011261296357600080fd5b813561297384826020860161282e565b91505092915050565b600082601f83011261298d57600080fd5b813561299d84826020860161286c565b91505092915050565b6000813590506129b581613f29565b92915050565b6000602082840312156129cd57600080fd5b60006129db848285016128aa565b91505092915050565b600080604083850312156129f757600080fd5b6000612a05858286016128aa565b9250506020612a16858286016128aa565b9150509250929050565b600080600080600060a08688031215612a3857600080fd5b6000612a46888289016128aa565b9550506020612a57888289016128aa565b945050604086013567ffffffffffffffff811115612a7457600080fd5b612a80888289016128e9565b935050606086013567ffffffffffffffff811115612a9d57600080fd5b612aa9888289016128e9565b925050608086013567ffffffffffffffff811115612ac657600080fd5b612ad288828901612952565b9150509295509295909350565b600080600080600060a08688031215612af757600080fd5b6000612b05888289016128aa565b9550506020612b16888289016128aa565b9450506040612b27888289016129a6565b9350506060612b38888289016129a6565b925050608086013567ffffffffffffffff811115612b5557600080fd5b612b6188828901612952565b9150509295509295909350565b600080600060608486031215612b8357600080fd5b6000612b91868287016128aa565b935050602084013567ffffffffffffffff811115612bae57600080fd5b612bba868287016128e9565b925050604084013567ffffffffffffffff811115612bd757600080fd5b612be3868287016128e9565b9150509250925092565b60008060008060808587031215612c0357600080fd5b6000612c11878288016128aa565b945050602085013567ffffffffffffffff811115612c2e57600080fd5b612c3a878288016128e9565b935050604085013567ffffffffffffffff811115612c5757600080fd5b612c63878288016128e9565b925050606085013567ffffffffffffffff811115612c8057600080fd5b612c8c87828801612952565b91505092959194509250565b60008060408385031215612cab57600080fd5b6000612cb9858286016128aa565b9250506020612cca85828601612913565b9150509250929050565b60008060408385031215612ce757600080fd5b6000612cf5858286016128aa565b9250506020612d06858286016129a6565b9150509250929050565b600080600060608486031215612d2557600080fd5b6000612d33868287016128aa565b9350506020612d44868287016129a6565b9250506040612d55868287016129a6565b9150509250925092565b60008060008060808587031215612d7557600080fd5b6000612d83878288016128aa565b9450506020612d94878288016129a6565b9350506040612da5878288016129a6565b925050606085013567ffffffffffffffff811115612dc257600080fd5b612dce87828801612952565b91505092959194509250565b60008060408385031215612ded57600080fd5b600083013567ffffffffffffffff811115612e0757600080fd5b612e13858286016128bf565b925050602083013567ffffffffffffffff811115612e3057600080fd5b612e3c858286016128e9565b9150509250929050565b600060208284031215612e5857600080fd5b6000612e6684828501612928565b91505092915050565b600060208284031215612e8157600080fd5b6000612e8f8482850161293d565b91505092915050565b600060208284031215612eaa57600080fd5b600082013567ffffffffffffffff811115612ec457600080fd5b612ed08482850161297c565b91505092915050565b600060208284031215612eeb57600080fd5b6000612ef9848285016129a6565b91505092915050565b6000612f0e8383613215565b60208301905092915050565b612f23816137a4565b82525050565b6000612f34826136b9565b612f3e81856136e7565b9350612f49836136a9565b8060005b83811015612f7a578151612f618882612f02565b9750612f6c836136da565b925050600181019050612f4d565b5085935050505092915050565b612f90816137b6565b82525050565b6000612fa1826136c4565b612fab81856136f8565b9350612fbb818560208601613827565b612fc4816139b5565b840191505092915050565b6000612fda826136cf565b612fe48185613709565b9350612ff4818560208601613827565b612ffd816139b5565b840191505092915050565b6000613015603483613709565b9150613020826139d3565b604082019050919050565b6000613038602883613709565b915061304382613a22565b604082019050919050565b600061305b602b83613709565b915061306682613a71565b604082019050919050565b600061307e602683613709565b915061308982613ac0565b604082019050919050565b60006130a1602483613709565b91506130ac82613b0f565b604082019050919050565b60006130c4602983613709565b91506130cf82613b5e565b604082019050919050565b60006130e7602583613709565b91506130f282613bad565b604082019050919050565b600061310a603283613709565b915061311582613bfc565b604082019050919050565b600061312d602383613709565b915061313882613c4b565b604082019050919050565b6000613150602a83613709565b915061315b82613c9a565b604082019050919050565b6000613173602083613709565b915061317e82613ce9565b602082019050919050565b6000613196602983613709565b91506131a182613d12565b604082019050919050565b60006131b9602983613709565b91506131c482613d61565b604082019050919050565b60006131dc602883613709565b91506131e782613db0565b604082019050919050565b60006131ff602183613709565b915061320a82613dff565b604082019050919050565b61321e8161380e565b82525050565b61322d8161380e565b82525050565b60006020820190506132486000830184612f1a565b92915050565b600060a0820190506132636000830188612f1a565b6132706020830187612f1a565b81810360408301526132828186612f29565b905081810360608301526132968185612f29565b905081810360808301526132aa8184612f96565b90509695505050505050565b600060a0820190506132cb6000830188612f1a565b6132d86020830187612f1a565b6132e56040830186613224565b6132f26060830185613224565b81810360808301526133048184612f96565b90509695505050505050565b6000602082019050818103600083015261332a8184612f29565b905092915050565b6000604082019050818103600083015261334c8185612f29565b905081810360208301526133608184612f29565b90509392505050565b600060208201905061337e6000830184612f87565b92915050565b6000602082019050818103600083015261339e8184612fcf565b905092915050565b600060208201905081810360008301526133bf81613008565b9050919050565b600060208201905081810360008301526133df8161302b565b9050919050565b600060208201905081810360008301526133ff8161304e565b9050919050565b6000602082019050818103600083015261341f81613071565b9050919050565b6000602082019050818103600083015261343f81613094565b9050919050565b6000602082019050818103600083015261345f816130b7565b9050919050565b6000602082019050818103600083015261347f816130da565b9050919050565b6000602082019050818103600083015261349f816130fd565b9050919050565b600060208201905081810360008301526134bf81613120565b9050919050565b600060208201905081810360008301526134df81613143565b9050919050565b600060208201905081810360008301526134ff81613166565b9050919050565b6000602082019050818103600083015261351f81613189565b9050919050565b6000602082019050818103600083015261353f816131ac565b9050919050565b6000602082019050818103600083015261355f816131cf565b9050919050565b6000602082019050818103600083015261357f816131f2565b9050919050565b600060208201905061359b6000830184613224565b92915050565b60006040820190506135b66000830185613224565b6135c36020830184613224565b9392505050565b60006135d46135e5565b90506135e0828261388c565b919050565b6000604051905090565b600067ffffffffffffffff82111561360a57613609613964565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561363657613635613964565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561366257613661613964565b5b61366b826139b5565b9050602081019050919050565b600067ffffffffffffffff82111561369357613692613964565b5b61369c826139b5565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006137258261380e565b91506137308361380e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561376557613764613906565b5b828201905092915050565b600061377b8261380e565b91506137868361380e565b92508282101561379957613798613906565b5b828203905092915050565b60006137af826137ee565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561384557808201518184015260208101905061382a565b83811115613854576000848401525b50505050565b6000600282049050600182168061387257607f821691505b6020821081141561388657613885613935565b5b50919050565b613895826139b5565b810181811067ffffffffffffffff821117156138b4576138b3613964565b5b80604052505050565b60006138c88261380e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138fb576138fa613906565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156139b25760046000803e6139af6000516139c6565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d1015613e5e57613ee1565b613e666135e5565b60043d036004823e80513d602482011167ffffffffffffffff82111715613e8e575050613ee1565b808201805167ffffffffffffffff811115613eac5750505050613ee1565b80602083010160043d038501811115613ec9575050505050613ee1565b613ed88260200185018661388c565b82955050505050505b90565b613eed816137a4565b8114613ef857600080fd5b50565b613f04816137b6565b8114613f0f57600080fd5b50565b613f1b816137c2565b8114613f2657600080fd5b50565b613f328161380e565b8114613f3d57600080fd5b5056fea2646970667358221220e25d6e1e75db2ae3e469c5058526479724747268c77b8b78286b992dcf7b4c2e64736f6c6343000802003368747470733a2f2f736d6f6c2e6d7970696e6174612e636c6f75642f697066732f516d59564b5a48375636594a58687737613236356d435972637277615932634e694d6b63727556624e74536961382f7b69647d2e6a736f6e\";\n\ntype MagicalItemConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MagicalItemConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class MagicalItem__factory extends ContractFactory {\n  constructor(...args: MagicalItemConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<MagicalItem> {\n    return super.deploy(overrides || {}) as Promise<MagicalItem>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): MagicalItem {\n    return super.attach(address) as MagicalItem;\n  }\n  connect(signer: Signer): MagicalItem__factory {\n    return super.connect(signer) as MagicalItem__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MagicalItemInterface {\n    return new utils.Interface(_abi) as MagicalItemInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MagicalItem {\n    return new Contract(address, _abi, signerOrProvider) as MagicalItem;\n  }\n}\n","import { IonAvatar, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonItemDivider, IonLabel, IonLoading, IonPage, IonRouterLink, IonRow, IonText, IonTitle, IonToolbar, useIonAlert } from '@ionic/react';\nimport { BigNumber, ethers, utils } from 'ethers';\nimport { documentLockOutline } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport LoginButton from '../components/LoginButton';\nimport { MagePunks, MagePunks__factory } from '../contracts';\nimport { MagePunkCard } from './Tab1';\nimport './Tab1.css';\nimport Countdown from 'react-countdown';\n\nexport interface NFTBalance {\n  token_address: string;\n  token_id: string;\n  contract_type: string;\n  owner_of: string;\n  block_number: string;\n  block_number_minted: string;\n  token_uri?: string | undefined;\n  metadata?: string | undefined;\n  synced_at?: string | undefined;\n  amount?: string | undefined;\n  name: string;\n  symbol: string;\n}\ninterface NFTMetadata {\n  token_address: string;\n  name: string;\n  abi?: string | undefined;\n  supports_token_uri?: number | undefined;\n  synced_at?: string | undefined;\n  symbol: string;\n  contract_type: string\n}\n\n\nconst unknownAttributes = [\n  {\n    \"trait_type\": \"class\",\n    \"value\": \"????\"\n  },\n  {\n    \"trait_type\": \"str\",\n    \"value\": \"??\"\n  },\n  {\n    \"trait_type\": \"dex\",\n    \"value\": \"??\"\n  },\n  {\n    \"trait_type\": \"con\",\n    \"value\": \"??\"\n  },\n  {\n    \"trait_type\": \"int\",\n    \"value\": \"??\"\n  },\n  {\n    \"trait_type\": \"wis\",\n    \"value\": \"??\"\n  },\n  {\n    \"trait_type\": \"cha\",\n    \"value\": \"??\"\n  }\n]\n\nexport const contractAddress = \"0x71909A03f9076c6330EeD80d34196E6498d2C921\"\n\n\n\n\nconst Tab2: React.FC = () => {\n\n  const { connect, ethereum, account, chainId } = useWallet()\n  const [magePunkId, setMagePunkId] = useState(\"\")\n  const [magePunkAttributes, setMagePunkAttributes] = useState<undefined | any>()\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n\n  const [present] = useIonAlert();\n  const [status, setStatus] = useState<\"idle\" | \"minting\" | \"minted\" | \"sold-out\">(\"idle\")\n  const [supply, setSupply] = useState<number>(0)\n  const [maxSupply, setMaxSupply] = useState<number>(0)\n  const [mintPrice, setMintPrice] = useState<BigNumber | undefined>()\n  const [baseUri, setBaseUri] = useState(\"https://smol.mypinata.cloud/ipfs/QmTXcKPjyNgsmmoFCkBz3LhhfCgpfMA4rvRSx48ANs48ah/\"\n  )\n  useEffect(() => {\n    console.log(\"effect0\");\n    if (supply > 0 && supply === maxSupply) {\n      setStatus(\"sold-out\");\n    }\n    const nftContract: MagePunks | undefined = signer && MagePunks__factory.connect(contractAddress, signer);\n    nftContract && nftContract.totalSupply().then((amount) => {\n      setSupply(amount.toNumber())\n    });\n    nftContract && nftContract._mintPrice().then((cost) => {\n      setMintPrice(cost);\n    });\n\n    nftContract && nftContract.on(\"Transfer\", (from, to, amount, event) => {\n      if (to === account && from === \"0x0000000000000000000000000000000000000000\") {\n        setStatus(\"minted\");\n        const mintedId = event.args[2].toString()\n        fetch(baseUri + mintedId + \".json\").then(async (res) => {\n          const json = await res.json()\n          setMagePunkAttributes(json);\n        })\n        setMagePunkId(event.args[2].toString());\n      }\n    })\n\n\n  }, [account])\n  const mintCurrency = \"FTM\";\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar >\n          <IonButtons slot=\"start\">\n            <IonTitle size='large' color=\"primary\">\n              <IonRouterLink href={'https://docs.magepunks.xyz/'}>\n                <IonText color=\"medium\">\n                  Magepunks 🧙\n                </IonText>\n                <IonChip color='primary'>\n                  docs\n                </IonChip>\n              </IonRouterLink>\n            </IonTitle>\n            <IonButton fill='clear' routerLink='/inventory'>\n              Inventory\n            </IonButton>\n          </IonButtons >\n          <IonButtons slot=\"end\">\n            <LoginButton />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n\n          <IonRow>\n            <IonCol sizeMd='0' sizeLg=\"2\">\n\n            </IonCol>\n            <IonCol sizeXs='12' sizeMd='12' sizeLg='4'>\n              {status !== \"minted\" && <IonCard title={\"Magepunk\"} color=\"light\">\n                <IonCardHeader color=\"paper\">\n                  <IonTitle size='large'>\n                  </IonTitle>\n                </IonCardHeader>\n                <IonCardContent>\n                  <IonImg src=\"https://smol.mypinata.cloud/ipfs/QmXmwf3VsBgUBRmBRbXKbNX9xXueM1sGSZmpWDykSLQzL5\" />\n                  <IonText color=\"medium\">\n                    <IonItemDivider >\n                      Magepunks, a renegade group of mages from all over the metaverse.\n                    </IonItemDivider>\n                  </IonText>\n                  <IonItemDivider color=\"clear\" />\n                  {(unknownAttributes).map((x: any, i) => <IonChip key={i} color=\"medium\">\n                    {x && x.trait_type && < IonLabel color=\"tertiary\">\n                      {String(x.trait_type)}:\n                    </IonLabel>}\n                    {x && x.value && String(x.value)}\n                  </IonChip>)}\n\n                </IonCardContent>\n              </IonCard >}\n              <IonItemDivider />\n              {magePunkAttributes && <MagePunkCard metadata={magePunkAttributes} />}\n              {chainId !== 250 && account && <IonLoading message={\"Please Switch to FTM...\" + chainId} isOpen={chainId !== 250} />}\n\n              {status === \"minting\" && <IonLoading message={\"Minting your Magepunk...\"} isOpen={true} />}\n            </IonCol>\n            <IonCol sizeXs='12' sizeMd='12' sizeLg='4'>\n\n              <IonCard title={\"Magepunk\"} color=\"light\">\n                <IonCardHeader color=\"paper\">\n                  <IonItem>\n                    <IonButtons slot='start'>\n                      <IonTitle size='large' color=\"tertiary\">\n                        Magepunkᵍᵐ\n                      </IonTitle>\n                      {supply === 0 ? \"???\" : supply} / 200  🧙\n                    </IonButtons>\n                    {mintPrice && <>Mint fee:<IonText color=\"secondary\">{utils.formatEther(mintPrice) + \" FTM\"}</IonText></>}\n                  </IonItem>\n                  <IonCardTitle>\n                  </IonCardTitle>\n                </IonCardHeader>\n                <IonCardContent>\n                  <h1>\n                    GEN 1 IS HERE!\n                  </h1>\n                  <IonItemDivider color=\"clear\" />\n                  {/* <IonButton expand='full' color='tertiary' onClick={() => {\n                    window.open(\"https://paintswap.finance/marketplace/collections/0x71909a03f9076c6330eed80d34196e6498d2c921\");\n                  }}>\n                    Available on Paintswap\n                  </IonButton> */}\n\n                  {/* <IonItemDivider color=\"clear\" >\n                    <IonText color=\"secondary\">\n                      Follow me on twitter for notifications on the next generation minting\n                    </IonText>\n                  </IonItemDivider>\n                  <IonItemDivider color=\"clear\" /> */}\n                  <IonText color=\"medium\">\n                    If you minted or held a magepunk on Jan 13th you should see your special surprise in your             <IonButton fill='clear' routerLink='/inventory'>\n                      Inventory\n                    </IonButton>\n\n                  </IonText>\n                  <IonItemDivider color=\"clear\" />\n                  {signer && mintPrice && status !== \"minted\" && <IonButton size='large' fill='solid' color=\"tertiary\" expand='full' onClick={() => {\n                    const nftContract = MagePunks__factory.connect(contractAddress, signer)\n                    nftContract.mint({ value: mintPrice }).then(() => {\n                      setStatus(\"minting\")\n                    }).catch((e) => {\n                      present({\n                        header: e.data.message,\n                        message: e.message,\n                        buttons: [\n                          { text: 'Ok' },\n                        ],\n                      })\n                    });\n                  }}>\n                    Mint\n                  </IonButton>}\n\n                  {status !== \"minted\" && !signer && <IonButton size='large' fill='solid' expand='full' onClick={() => {\n                    connect(\"injected\");\n                  }}>\n                    Connect to mint\n                  </IonButton>}\n                  {status === \"minted\" && <IonButton size='large' href={\"https://twitter.com/intent/tweet?text=Just minted $magepunk \" + magePunkId + \" at https://magepunk.xyz on $FTM\"} expand='full'>\n                    Share on Twitter\n                  </IonButton>}\n                  <IonItemDivider color=\"clear\" />\n                  <IonItem href={'https://ftmscan.com/address/' + contractAddress} >\n                    <IonIcon icon={documentLockOutline} />\n                    <IonText color=\"medium\">View Contract: {contractAddress}\n                    </IonText>\n                  </IonItem>\n                </IonCardContent>\n              </IonCard >\n              <div style={{ position: 'absolute', right: 0, bottom: 100 }}>\n\n                <IonChip onClick={() => {\n                  window.open(\"https://twitter.com/lil_esper\");\n                }}>\n                  <IonAvatar >\n                    <IonImg src='https://pbs.twimg.com/profile_images/1476356852724109315/wkQAXiMz_400x400.jpg' />\n                  </IonAvatar>\n                  <IonLabel>\n\n                  </IonLabel>\n                  Made by lil Esper</IonChip>\n\n\n              </div>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage >\n  );\n};\n\nexport default Tab2;\n","import { IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonItem, IonItemDivider, IonLabel, IonPage, IonRow, IonText, IonTitle, IonToolbar } from '@ionic/react';\nimport { BigNumber, ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport LoginButton from '../components/LoginButton';\nimport { MagePunks, MagePunks__factory } from '../contracts';\nimport { MagicalItem__factory } from '../contracts/factories/MagicalItem__factory';\nimport { MagicalItem } from '../contracts/MagicalItem';\nimport './Tab1.css';\nimport { contractAddress } from './Tab3';\n\nexport interface NFTBalance {\n  token_address: string;\n  token_id: string;\n  contract_type: string;\n  owner_of: string;\n  block_number: string;\n  block_number_minted: string;\n  token_uri?: string | undefined;\n  metadata?: string | undefined;\n  synced_at?: string | undefined;\n  amount?: string | undefined;\n  name: string;\n  symbol: string;\n}\ninterface NFTMetadata {\n  token_address: string;\n  name: string;\n  abi?: string | undefined;\n  supports_token_uri?: number | undefined;\n  synced_at?: string | undefined;\n  symbol: string;\n  contract_type: string\n}\n\nexport const NFTCard: React.FC<{ nft: NFTBalance }> = ({ nft }) => {\n  const [nftMeta, setNFTMetadata] = useState<any | undefined>(nft.metadata)\n  useEffect(() => {\n    (async () => {\n\n    })()\n\n  }, [nft])\n  return <IonCard title={nft.name} color=\"light\">\n    <IonCardHeader color=\"paper\">\n      <IonTitle size='large'>\n        <h2>\n          {nft.name || nft.symbol || (nftMeta && nftMeta.description)}\n        </h2>\n      </IonTitle>\n\n    </IonCardHeader>\n    <IonCardContent>\n      {nftMeta && nftMeta.image && <IonImg style={{ width: 612, height: 612 }} src={nftMeta.image.replace(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")} />}\n      <IonText color=\"medium\">\n        <IonItemDivider >\n          {nftMeta && nftMeta.description || \"\"}\n        </IonItemDivider>\n      </IonText>\n      <IonItemDivider color=\"clear\" />\n      {Object.values(nftMeta.attributes).map((x: any, i) => <IonChip key={i} color=\"medium\">\n        {x && x.trait_type && < IonLabel color=\"tertiary\">\n          {String(x.trait_type)}:\n        </IonLabel>}\n        {x && x.value && String(x.value)}\n      </IonChip>)}\n    </IonCardContent>\n  </IonCard >\n}\n\n\nexport const MagePunkCard: React.FC<{ metadata: any }> = ({ metadata }) => {\n  const nft = metadata;\n  const nftMeta = metadata;\n  return <IonCard title={nft.name}>\n    <IonItem color=\"tertiary\">\n      <IonTitle>\n        {nft.name || nft.symbol || (nftMeta && nftMeta.description)}\n      </IonTitle>\n    </IonItem>\n    <IonCardContent>\n      {nftMeta && nftMeta.image && <IonImg src={nftMeta.image.replace(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")} />}\n\n      <IonText color=\"medium\">\n        {nftMeta && nftMeta.description || \"\"}\n      </IonText>\n      <IonItemDivider color=\"clear\" />\n      {Object.values(nftMeta.attributes).map((x: any) => <IonChip color=\"medium\">\n        {x && x.trait_type && < IonLabel color=\"tertiary\">\n          {String(x.trait_type)}:\n        </IonLabel>}\n        {x && x.value && String(x.value)}\n      </IonChip>)}\n    </IonCardContent>\n  </IonCard >\n}\n\n\n\nexport const AsyncERC1155Card: React.FC<{ address: string, id: string, name: string, balance: string }> = ({ name, id, address, balance }) => {\n\n  const nft = useState();\n  const [nftMeta, setNftMeta] = useState<Record<string, string> | undefined>(undefined);\n  const { connect, ethereum, account } = useWallet()\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n  console.log(nftMeta);\n\n  useEffect(() => {\n\n\n    const nftContract: MagicalItem | undefined = signer && MagicalItem__factory.connect(address, signer);\n    nftContract && id && nftContract.uri(id).then((address) => {\n      id && fetch(address.replace(\"{id}\", id)).then(async (res) => {\n        const json = await res.json();\n        setNftMeta(json);\n      })\n    });\n\n\n\n  }, [])\n  return <IonCard title={name}>\n    <IonItem color=\"primary\">\n      <IonTitle>\n        {balance}x {nftMeta && nftMeta.name}\n      </IonTitle>\n    </IonItem>\n    <IonCardContent>\n      {nftMeta && nftMeta.image && <IonImg src={nftMeta.image.replace(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")} />}\n\n      <IonText color=\"medium\">\n        {nftMeta && nftMeta.description || \"\"}\n      </IonText>\n      <IonItemDivider color=\"clear\" />\n      {nftMeta && Object.values(nftMeta.attributes).map((x: any) => <IonChip color=\"medium\">\n        {x && x.trait_type && < IonLabel color=\"tertiary\">\n          {String(x.trait_type)}:\n        </IonLabel>}\n        {x && x.value && String(x.value)}\n      </IonChip>)}\n    </IonCardContent>\n  </IonCard >\n}\n\n\nexport const AsyncNFTCard: React.FC<{ address: string, id: string, name: string, }> = ({ name, id, address }) => {\n\n  const nft = useState();\n  const [nftMeta, setNftMeta] = useState<Record<string, string> | undefined>(undefined);\n  const { connect, ethereum, account } = useWallet()\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n  console.log(nftMeta);\n\n  useEffect(() => {\n\n\n    const nftContract: MagePunks | undefined = signer && MagePunks__factory.connect(address, signer);\n    nftContract && id && nftContract.tokenURI(id).then((address) => {\n      id && fetch(address.replace(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")).then(async (res) => {\n        const json = await res.json();\n        setNftMeta(json);\n      })\n    });\n\n\n\n  }, [])\n  return <IonCard title={name}>\n    <IonItem color=\"tertiary\">\n      <IonTitle>\n        {nftMeta && nftMeta.name}\n      </IonTitle>\n    </IonItem>\n    <IonCardContent>\n      {nftMeta && nftMeta.image && <IonImg src={nftMeta.image.replace(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")} />}\n\n      <IonText color=\"medium\">\n        {nftMeta && nftMeta.description || \"\"}\n      </IonText>\n      <IonItemDivider color=\"clear\" />\n      {nftMeta && Object.values(nftMeta.attributes).map((x: any) => <IonChip color=\"medium\">\n        {x && x.trait_type && < IonLabel color=\"tertiary\">\n          {String(x.trait_type)}:\n        </IonLabel>}\n        {x && x.value && String(x.value)}\n      </IonChip>)}\n    </IonCardContent>\n  </IonCard >\n}\n\nconst CollectionInventory: React.FC<{ contract_address: string, name: string }> = ({ contract_address, name }) => {\n  const [supply, setSupply] = useState<number | undefined>()\n  const { ethereum, account } = useWallet();\n  const [magePunkOwners, setMagePunkOwners] = useState<Record<string, string>>();\n  const [myPunks, setMyPunks] = useState<number[]>([]);\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n  useEffect(() => {\n    const nftContract: MagePunks | undefined = signer && MagePunks__factory.connect(contract_address, signer);\n    nftContract && nftContract.totalSupply().then((amount) => {\n      setSupply(amount.toNumber())\n    });\n\n  }, [account]);\n  useEffect(() => {\n    const nftContract: MagePunks | undefined = signer && MagePunks__factory.connect(contract_address, signer);\n    supply && Array.from(Array(supply)).forEach((x, i) => {\n      const id = i + 1;\n      console.log(id);\n      account && signer && nftContract?.ownerOf(i + 1).then((res) => {\n        if (res === account) {\n          setMyPunks(x => {\n            if (x.includes(i + 1)) {\n              return x;\n            }\n            return ([...x, i + 1])\n          })\n        }\n        setMagePunkOwners(x => ({ [id]: res }));\n      })\n    });\n  }, [account, supply])\n  return (\n    <>\n      {myPunks.map((id) => <IonCol size='3'> <AsyncNFTCard address={contractAddress} id={id.toString()} name={name} /></IonCol>)}\n    </>\n  );\n};\n\n\n\nconst ERC1155CollectionInventory: React.FC<{ contract_address: string, name: string }> = ({ contract_address, name }) => {\n  const { ethereum, account } = useWallet();\n  const [inventory, setInventory] = useState<Record<string, string>>();\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n  useEffect(() => {\n    const nftContract: MagicalItem | undefined = signer && MagicalItem__factory.connect(contract_address, signer);\n    Array.from(Array(5)).forEach((x, i) => {\n      const id = i + 1;\n      console.log(id);\n      account && signer && nftContract?.balanceOf(account, i + 1).then((balance) => {\n        console.log(balance);\n        setInventory(x => ({\n          ...x, [id]: balance.toNumber()\n        }))\n      })\n    });\n  }, [account])\n  return (\n    <>\n      {inventory && Object.entries(inventory).map(([id, balance]) =>\n        <>\n          {balance && balance !== \"0\" ? <IonCol size=\"3\"> <AsyncERC1155Card key={id} balance={balance} name='Magical Item' address={contract_address} id={id} /></IonCol> : <></>}\n        </>)\n      }\n    </>\n  );\n};\n\nconst Tab1: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <a href=\"/\">\n              <IonTitle>Magepunks</IonTitle>\n            </a>\n          </IonButtons>\n          <IonTitle>Magical Inventory</IonTitle>\n          <IonButtons slot=\"end\">\n            <LoginButton />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <CollectionInventory name='MagePunk' contract_address={contractAddress} />\n            <ERC1155CollectionInventory name='Magical Item' contract_address={\"0xa6e6e61e2039Ef69AeCd449040470368d28575f1\"} />\n          </IonRow>\n          {/* <CollectionInventory name='Riot Gool' contract_address={\"0x4f504ab2e7b196a4165ab3db71e75cb2b37070e0\"} /> */}\n        </IonGrid>\n      </IonContent>\n    </IonPage >\n  );\n};\n\nexport default Tab1;\n","import { IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonItem, IonItemDivider, IonLabel, IonPage, IonRow, IonText, IonTitle, IonToolbar } from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport LoginButton from '../components/LoginButton';\nimport './Tab1.css';\nimport { balloon } from 'ionicons/icons';\nimport { MagePunkCard, NFTCard } from './Tab1';\nimport { useParams } from 'react-router';\nimport { BigNumber, ethers } from 'ethers';\nimport { useWallet } from 'use-wallet';\nimport { MagePunks, MagePunks__factory } from '../contracts';\nimport { contractAddress } from './Tab3';\n\nexport interface NFTBalance {\n  token_address: string;\n  token_id: string;\n  contract_type: string;\n  owner_of: string;\n  block_number: string;\n  block_number_minted: string;\n  token_uri?: string | undefined;\n  metadata?: string | undefined;\n  synced_at?: string | undefined;\n  amount?: string | undefined;\n  name: string;\n  symbol: string;\n}\ninterface NFTMetadata {\n  token_address: string;\n  name: string;\n  abi?: string | undefined;\n  supports_token_uri?: number | undefined;\n  synced_at?: string | undefined;\n  symbol: string;\n  contract_type: string\n}\n\nconst Tab2: React.FC = () => {\n\n  const { id } = useParams<{ id: string }>()\n  const { connect, ethereum, account } = useWallet()\n  const signer = ethereum && (new ethers.providers.Web3Provider(ethereum)).getSigner();\n  const [status, setStatus] = useState<\"loading\" | \"idle\" | \"hidden\">(\"loading\");\n  const [ownerAddress, setOwnerAddress] = useState(\"\");\n  const [magePunkAttributes, setMagePunkAttributes] = useState<undefined | any>()\n  useEffect(() => {\n\n    const nftContract: MagePunks | undefined = signer && MagePunks__factory.connect(contractAddress, signer);\n    nftContract && nftContract.supply().then((amount) => {\n      if (amount.toNumber() > parseInt(id)) {\n        setStatus(\"idle\");\n      } else {\n        setStatus(\"hidden\");\n      }\n    });\n    nftContract && id && nftContract.ownerOf(BigNumber.from(id)).then((address) => {\n      console.log(\"RESULTS\", address)\n      setOwnerAddress(address);\n    });\n    (async () => {\n\n      id && fetch(\"https://smol.mypinata.cloud/ipfs/QmVgzvxRiiGcB2jzwHYjYQU5JDeT6yFgLekPK2cwerenFw/\" + (id) + \".json\").then(async (res) => {\n        const json = await res.json();\n        setMagePunkAttributes(json);\n      })\n\n    })()\n\n  }, [account, id])\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <a href=\"/\">\n            <IonTitle>Magepunks</IonTitle>\n          </a>\n          <IonButtons slot=\"end\">\n            <LoginButton />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent >\n        <IonGrid>\n\n          <IonRow>\n            <IonCol />\n            {magePunkAttributes && <MagePunkCard metadata={magePunkAttributes} />}\n            {ownerAddress && <IonItem href={'https://ftmscan.com/address/' + ownerAddress}>\n              <IonText color=\"medium\">\n                Owner {ownerAddress}\n              </IonText>\n            </IonItem>}\n            <IonCol />\n          </IonRow>\n          \n        </IonGrid>\n      </IonContent>\n    </IonPage >\n  );\n};\n\nexport default Tab2;\n","import {\n  IonApp, IonRouterOutlet, setupIonicReact\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\nimport '@ionic/react/css/display.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/float-elements.css';\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/typography.css';\nimport { Redirect, Route } from 'react-router-dom';\nimport { UseWalletProvider } from \"use-wallet\";\nimport usePromptNetwork from './hooks/usePromptNetwork';\nimport Tab1 from './pages/Tab1';\nimport Tab2 from './pages/Tab2';\nimport Tab3 from './pages/Tab3';\n/* Theme variables */\nimport './theme/variables.css';\n\n\n\nsetupIonicReact();\n\nconst App: React.FC = () => {\n  const prompt = usePromptNetwork()\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <UseWalletProvider>\n          <IonRouterOutlet>\n\n            <Route exact path=\"/FTM/NFTS\">\n              <Tab1 />\n            </Route>\n            <Route path=\"/FTM\">\n              <Tab3 />\n            </Route>\n            <Route path=\"/FTM/:id\">\n              <Tab2 />\n            </Route>\n            <Route path=\"/inventory/\">\n              <Tab1 />\n            </Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/FTM/\" />\n            </Route>\n          </IonRouterOutlet>\n        </UseWalletProvider>\n      </IonReactRouter>\n    </IonApp >\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}